@layout('layouts/dashboard')

@set('title', 'Création - Logo / Bannière')

@section('body')
  <div>
       <!-- Header -->

    <div class="min-h-full flex items-center justify-center py-32 px-4 sm:px-6 lg:px-8 z-30">
        <div class="space-y-8 z-30 reveal">
          <div>
            <svg class="mx-auto h-12 w-auto" width="116" height="49" viewBox="0 0 116 49" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M33.4891 7.37753L50.6743 25.6562L73.3675 0L116 49L73.3675 13.3236V35.6707L56.623 28.8494L41.9164 41.182L50.6743 28.8494L33.4891 16.4067L26.7692 27.9685L24.566 26.5371L20.8205 35.4562L19.1681 27.9685L0 39.5303L14.1007 25.6562H20.2697L33.4891 7.37753Z" fill="#373D5B"/>
                </svg>
            <h2 class="mt-6 text-center text-3xl tracking-tight font-bold text-gray-900">Création d'un Logo / Bannière</h2>
          </div>

                  <!-- Début du form -->
          
     <form class="mt-8 space-y-6" action="{{ route('post') }}" method="POST" id="theform" enctype="multipart/form-data">
            <div class="rounded-md shadow-sm -space-y-px">      
              @if(flashMessages.has('notification'))
                @!component('components.actionbar', {
                  type: 'error',
                  text: flashMessages.get('notification'),
                })
              @endif
              <div>
                <label for="title" class="sr-only">Titre</label>
                <input id="title" name="title" type="text" required class="appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-slate-700 focus:border-slate-700 focus:z-10 sm:text-sm" placeholder="Titre">
              </div>
              <div>
                <select name="type" id="type" class="appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-slate-700 focus:border-slate-700 focus:z-10 sm:text-sm">
                  <option value="">Choisi une option</option>
                  <option value="logo">Logo</option>
                  <option value="banniere">Bannière</option>
              </select>
              </div>
              <div>
                <label for="img" class="sr-only">Image</label>
                <input id="img" name="img" type="file" required class="appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-slate-700 focus:border-slate-700 focus:z-10 sm:text-sm" placeholder="img">
              </div>
              <input id="content" name="content" type="text" required class="hidden">
              <div id="editor" class="bg-white rounded-b-md"></div>
            </div>
      
            <div>
              <button type="submit" class="duration-200 group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-slate-700 hover:bg-slate-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-700">
                <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-slate-500 group-hover:text-slate-400">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>  
                </span>
                Créer
              </button>
            </div>
          </form>
        </div>
      </div>
      <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<!-- Initialize Quill editor -->
        <script>
        const editor = new Quill('#editor', {
          modules: {
            syntax: true,
            toolbar: [
              ['bold', 'italic', 'underline'],
              ['image'],
              [{ 'header': [2, 3, false] }],
              [{ 'color': [] }, { 'background': [] }],
              [{ 'list': 'ordered'}, { 'list': 'bullet' }],
              ['code-block'],
              ['clean']
            ]
          },
          placeholder: 'Contenu de votre article',
          theme: 'snow'
        })

          var hiddenArea = document.querySelector('#content');
          editor.on('text-change', function(delta, oldDelta, source) {
            hiddenArea.value = editor.root.innerHTML;
          });
        </script>
  </div>
  @end